"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from .bf import BFBloom, CFBloom, CMSBloom, TDigestBloom, TOPKBloom
from .json import AsyncJSON, JSON
from .search import AsyncSearch, Search
from .timeseries import TimeSeries
from .vectorset import VectorSet

if TYPE_CHECKING:
    ...
class RedisModuleCommands:
    """This class contains the wrapper functions to bring supported redis
    modules into the command namespace.
    """
    def json(self, encoder=..., decoder=...) -> JSON:
        """Access the json namespace, providing support for redis json."""
        ...
    
    def ft(self, index_name=...) -> Search:
        """Access the search namespace, providing support for redis search."""
        ...
    
    def ts(self) -> TimeSeries:
        """Access the timeseries namespace, providing support for
        redis timeseries data.
        """
        ...
    
    def bf(self) -> BFBloom:
        """Access the bloom namespace."""
        ...
    
    def cf(self) -> CFBloom:
        """Access the bloom namespace."""
        ...
    
    def cms(self) -> CMSBloom:
        """Access the bloom namespace."""
        ...
    
    def topk(self) -> TOPKBloom:
        """Access the bloom namespace."""
        ...
    
    def tdigest(self) -> TDigestBloom:
        """Access the bloom namespace."""
        ...
    
    def vset(self) -> VectorSet:
        """Access the VectorSet commands namespace."""
        ...
    


class AsyncRedisModuleCommands(RedisModuleCommands):
    def ft(self, index_name=...) -> AsyncSearch:
        """Access the search namespace, providing support for redis search."""
        ...
    
    def json(self, encoder=..., decoder=...) -> AsyncJSON:
        """Access the json namespace, providing support for redis json."""
        ...


